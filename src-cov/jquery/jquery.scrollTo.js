/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['jquery/jquery.scrollTo.js']) {
  _$jscoverage['jquery/jquery.scrollTo.js'] = [];
  _$jscoverage['jquery/jquery.scrollTo.js'][56] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][58] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][59] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][62] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][68] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][69] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][72] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][73] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][74] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][75] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][77] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][78] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][79] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][80] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][81] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][82] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][83] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][85] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][86] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][89] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][92] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][93] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][94] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][96] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][98] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][99] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][101] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][102] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][109] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][110] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][112] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][113] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][114] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][117] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][119] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][120] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][122] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][124] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][125] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][127] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][128] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][129] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][130] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][133] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][135] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][136] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][137] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][139] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][140] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][141] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][142] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][143] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][147] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][148] = 0;
  _$jscoverage['jquery/jquery.scrollTo.js'][149] = 0;
}
_$jscoverage['jquery/jquery.scrollTo.js'][56]++;
;
_$jscoverage['jquery/jquery.scrollTo.js'][56]++;
(function ($) {
  _$jscoverage['jquery/jquery.scrollTo.js'][58]++;
  var $scrollTo = $.scrollTo = (function (target, duration, settings) {
  _$jscoverage['jquery/jquery.scrollTo.js'][59]++;
  $scrollTo.window().scrollTo(target, duration, settings);
});
  _$jscoverage['jquery/jquery.scrollTo.js'][62]++;
  $scrollTo.defaults = {axis: "y", duration: 1};
  _$jscoverage['jquery/jquery.scrollTo.js'][68]++;
  $scrollTo.window = (function () {
  _$jscoverage['jquery/jquery.scrollTo.js'][69]++;
  return $($.browser.safari? "body": "html");
});
  _$jscoverage['jquery/jquery.scrollTo.js'][72]++;
  $.fn.scrollTo = (function (target, duration, settings) {
  _$jscoverage['jquery/jquery.scrollTo.js'][73]++;
  if (typeof duration == "object") {
    _$jscoverage['jquery/jquery.scrollTo.js'][74]++;
    settings = duration;
    _$jscoverage['jquery/jquery.scrollTo.js'][75]++;
    duration = 0;
  }
  _$jscoverage['jquery/jquery.scrollTo.js'][77]++;
  settings = $.extend({}, $scrollTo.defaults, settings);
  _$jscoverage['jquery/jquery.scrollTo.js'][78]++;
  duration = duration || settings.speed || settings.duration;
  _$jscoverage['jquery/jquery.scrollTo.js'][79]++;
  settings.queue = settings.queue && settings.axis.length > 1;
  _$jscoverage['jquery/jquery.scrollTo.js'][80]++;
  if (settings.queue) {
    _$jscoverage['jquery/jquery.scrollTo.js'][81]++;
    duration /= 2;
  }
  _$jscoverage['jquery/jquery.scrollTo.js'][82]++;
  settings.offset = both(settings.offset);
  _$jscoverage['jquery/jquery.scrollTo.js'][83]++;
  settings.over = both(settings.over);
  _$jscoverage['jquery/jquery.scrollTo.js'][85]++;
  return this.each((function () {
  _$jscoverage['jquery/jquery.scrollTo.js'][86]++;
  var elem = this, $elem = $(elem), t = target, toff, attr = {}, win = $elem.is("html,body");
  _$jscoverage['jquery/jquery.scrollTo.js'][89]++;
  switch (typeof t) {
  case "number":
  case "string":
    _$jscoverage['jquery/jquery.scrollTo.js'][92]++;
    if (/^([+-]=)?\d+(px)?$/.test(t)) {
      _$jscoverage['jquery/jquery.scrollTo.js'][93]++;
      t = both(t);
      _$jscoverage['jquery/jquery.scrollTo.js'][94]++;
      break;
    }
    _$jscoverage['jquery/jquery.scrollTo.js'][96]++;
    t = $(t, this);
  case "object":
    _$jscoverage['jquery/jquery.scrollTo.js'][98]++;
    if (t.is || t.style) {
      _$jscoverage['jquery/jquery.scrollTo.js'][99]++;
      toff = (t = $(t)).offset();
    }
  }
  _$jscoverage['jquery/jquery.scrollTo.js'][101]++;
  $.each(settings.axis.split(""), (function (i, axis) {
  _$jscoverage['jquery/jquery.scrollTo.js'][102]++;
  var Pos = axis == "x"? "Left": "Top", pos = Pos.toLowerCase(), key = "scroll" + Pos, act = elem[key], Dim = axis == "x"? "Width": "Height", dim = Dim.toLowerCase();
  _$jscoverage['jquery/jquery.scrollTo.js'][109]++;
  if (toff) {
    _$jscoverage['jquery/jquery.scrollTo.js'][110]++;
    attr[key] = toff[pos] + (win? 0: act - $elem.offset()[pos]);
    _$jscoverage['jquery/jquery.scrollTo.js'][112]++;
    if (settings.margin) {
      _$jscoverage['jquery/jquery.scrollTo.js'][113]++;
      attr[key] -= parseInt(t.css("margin" + Pos)) || 0;
      _$jscoverage['jquery/jquery.scrollTo.js'][114]++;
      attr[key] -= parseInt(t.css("border" + Pos + "Width")) || 0;
    }
    _$jscoverage['jquery/jquery.scrollTo.js'][117]++;
    attr[key] += settings.offset[pos] || 0;
    _$jscoverage['jquery/jquery.scrollTo.js'][119]++;
    if (settings.over[pos]) {
      _$jscoverage['jquery/jquery.scrollTo.js'][120]++;
      attr[key] += t[dim]() * settings.over[pos];
    }
  }
  else {
    _$jscoverage['jquery/jquery.scrollTo.js'][122]++;
    attr[key] = t[pos];
  }
  _$jscoverage['jquery/jquery.scrollTo.js'][124]++;
  if (/^\d+$/.test(attr[key])) {
    _$jscoverage['jquery/jquery.scrollTo.js'][125]++;
    attr[key] = attr[key] <= 0? 0: Math.min(attr[key], max(Dim));
  }
  _$jscoverage['jquery/jquery.scrollTo.js'][127]++;
  if (! i && settings.queue) {
    _$jscoverage['jquery/jquery.scrollTo.js'][128]++;
    if (act != attr[key]) {
      _$jscoverage['jquery/jquery.scrollTo.js'][129]++;
      animate(settings.onAfterFirst);
    }
    _$jscoverage['jquery/jquery.scrollTo.js'][130]++;
    delete attr[key];
  }
}));
  _$jscoverage['jquery/jquery.scrollTo.js'][133]++;
  animate(settings.onAfter);
  _$jscoverage['jquery/jquery.scrollTo.js'][135]++;
  function animate(callback) {
    _$jscoverage['jquery/jquery.scrollTo.js'][136]++;
    $elem.animate(attr, duration, settings.easing, callback && (function () {
  _$jscoverage['jquery/jquery.scrollTo.js'][137]++;
  callback.call(this, target);
}));
}
  _$jscoverage['jquery/jquery.scrollTo.js'][139]++;
  ;
  _$jscoverage['jquery/jquery.scrollTo.js'][140]++;
  function max(Dim) {
    _$jscoverage['jquery/jquery.scrollTo.js'][141]++;
    var el = win? $.browser.opera? document.body: document.documentElement: elem;
    _$jscoverage['jquery/jquery.scrollTo.js'][142]++;
    return el["scroll" + Dim] - el["client" + Dim];
}
  _$jscoverage['jquery/jquery.scrollTo.js'][143]++;
  ;
}));
});
  _$jscoverage['jquery/jquery.scrollTo.js'][147]++;
  function both(val) {
    _$jscoverage['jquery/jquery.scrollTo.js'][148]++;
    return typeof val == "object"? val: {top: val, left: val};
}
  _$jscoverage['jquery/jquery.scrollTo.js'][149]++;
  ;
})(jQuery);
_$jscoverage['jquery/jquery.scrollTo.js'].source = ["/*jsl:ignoreall*/","/**"," * jQuery.ScrollTo"," * Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com"," * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)"," * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses."," * Date: 2/19/2008"," *"," * @projectDescription Easy element scrolling using jQuery."," * Tested with jQuery 1.2.1. On FF 2.0.0.11, IE 6, Opera 9.22 and Safari 3 beta. on Windows."," *"," * @author Ariel Flesler"," * @version 1.3.3"," *"," * @id jQuery.scrollTo"," * @id jQuery.fn.scrollTo"," * @param {String, Number, DOMElement, jQuery, Object} target Where to scroll the matched elements."," *\t  The different options for target are:"," *\t\t- A number position (will be applied to all axes)."," *\t\t- A string position ('44', '100px', '+=90', etc ) will be applied to all axes"," *\t\t- A jQuery/DOM element ( logically, child of the element to scroll )"," *\t\t- A string selector, that will be relative to the element to scroll ( 'li:eq(2)', etc )"," *\t\t- A hash { top:x, left:y }, x and y can be any kind of number/string like above."," * @param {Number} duration The OVERALL length of the animation, this argument can be the settings object instead."," * @param {Object} settings Hash of settings, optional."," *\t @option {String} axis Which axis must be scrolled, use 'x', 'y', 'xy' or 'yx'."," *\t @option {Number} duration The OVERALL length of the animation."," *\t @option {String} easing The easing method for the animation."," *\t @option {Boolean} margin If true, the margin of the target element will be deducted from the final position."," *\t @option {Object, Number} offset Add/deduct from the end position. One number for both axes or { top:x, left:y }."," *\t @option {Object, Number} over Add/deduct the height/width multiplied by 'over', can be { top:x, left:y } when using both axes."," *\t @option {Boolean} queue If true, and both axis are given, the 2nd axis will only be animated after the first one ends."," *\t @option {Function} onAfter Function to be called after the scrolling ends. "," *\t @option {Function} onAfterFirst If queuing is activated, this function will be called after the first scrolling ends."," * @return {jQuery} Returns the same jQuery object, for chaining."," *"," * @example $('div').scrollTo( 340 );"," *"," * @example $('div').scrollTo( '+=340px', { axis:'y' } );"," *"," * @example $('div').scrollTo( 'p.paragraph:eq(2)', 500, { easing:'swing', queue:true, axis:'xy' } );"," *"," * @example var second_child = document.getElementById('container').firstChild.nextSibling;"," *\t\t\t$('#container').scrollTo( second_child, { duration:500, axis:'x', onAfter:function(){"," *\t\t\t\talert('scrolled!!');\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   "," *\t\t\t}});"," *"," * @example $('div').scrollTo( { top: 300, left:'+=200' }, { offset:-20 } );"," *"," * Notes:"," *  - jQuery.scrollTo will make the whole window scroll, it accepts the same arguments as jQuery.fn.scrollTo."," *\t- If you are interested in animated anchor navigation, check http://jquery.com/plugins/project/LocalScroll."," *\t- The options margin, offset and over are ignored, if the target is not a jQuery object or a DOM element."," *\t- The option 'queue' won't be taken into account, if only 1 axis is given."," */",";(function( $ ){","","\tvar $scrollTo = $.scrollTo = function( target, duration, settings ){","\t\t$scrollTo.window().scrollTo( target, duration, settings );","\t};","","\t$scrollTo.defaults = {","\t\taxis:'y',","\t\tduration:1","\t};","","\t//returns the element that needs to be animated to scroll the window","\t$scrollTo.window = function(){","\t\treturn $( $.browser.safari ? 'body' : 'html' );","\t};","","\t$.fn.scrollTo = function( target, duration, settings ){","\t\tif( typeof duration == 'object' ){","\t\t\tsettings = duration;","\t\t\tduration = 0;","\t\t}","\t\tsettings = $.extend( {}, $scrollTo.defaults, settings );","\t\tduration = duration || settings.speed || settings.duration;//speed is still recognized for backwards compatibility","\t\tsettings.queue = settings.queue &amp;&amp; settings.axis.length &gt; 1;//make sure the settings are given right","\t\tif( settings.queue )","\t\t\tduration /= 2;//let's keep the overall speed, the same.","\t\tsettings.offset = both( settings.offset );","\t\tsettings.over = both( settings.over );","","\t\treturn this.each(function(){","\t\t\tvar elem = this, $elem = $(elem),","\t\t\t\tt = target, toff, attr = {},","\t\t\t\twin = $elem.is('html,body');","\t\t\tswitch( typeof t ){","\t\t\t\tcase 'number'://will pass the regex","\t\t\t\tcase 'string':","\t\t\t\t\tif( /^([+-]=)?\\d+(px)?$/.test(t) ){","\t\t\t\t\t\tt = both( t );","\t\t\t\t\t\tbreak;//we are done","\t\t\t\t\t}","\t\t\t\t\tt = $(t,this);// relative selector, no break!","\t\t\t\tcase 'object':","\t\t\t\t\tif( t.is || t.style )//DOM/jQuery","\t\t\t\t\t\ttoff = (t = $(t)).offset();//get the real position of the target ","\t\t\t}","\t\t\t$.each( settings.axis.split(''), function( i, axis ){","\t\t\t\tvar Pos\t= axis == 'x' ? 'Left' : 'Top',","\t\t\t\t\tpos = Pos.toLowerCase(),","\t\t\t\t\tkey = 'scroll' + Pos,","\t\t\t\t\tact = elem[key],","\t\t\t\t\tDim = axis == 'x' ? 'Width' : 'Height',","\t\t\t\t\tdim = Dim.toLowerCase();","","\t\t\t\tif( toff ){//jQuery/DOM","\t\t\t\t\tattr[key] = toff[pos] + ( win ? 0 : act - $elem.offset()[pos] );","","\t\t\t\t\tif( settings.margin ){//if it's a dom element, reduce the margin","\t\t\t\t\t\tattr[key] -= parseInt(t.css('margin'+Pos)) || 0;","\t\t\t\t\t\tattr[key] -= parseInt(t.css('border'+Pos+'Width')) || 0;","\t\t\t\t\t}","\t\t\t\t\t","\t\t\t\t\tattr[key] += settings.offset[pos] || 0;//add/deduct the offset","\t\t\t\t\t","\t\t\t\t\tif( settings.over[pos] )//scroll to a fraction of its width/height","\t\t\t\t\t\tattr[key] += t[dim]() * settings.over[pos];","\t\t\t\t}else","\t\t\t\t\tattr[key] = t[pos];//remove the unnecesary 'px'","","\t\t\t\tif( /^\\d+$/.test(attr[key]) )//number or 'number'","\t\t\t\t\tattr[key] = attr[key] &lt;= 0 ? 0 : Math.min( attr[key], max(Dim) );//check the limits","","\t\t\t\tif( !i &amp;&amp; settings.queue ){//queueing each axis is required\t\t\t\t\t","\t\t\t\t\tif( act != attr[key] )//don't waste time animating, if there's no need.","\t\t\t\t\t\tanimate( settings.onAfterFirst );//intermediate animation","\t\t\t\t\tdelete attr[key];//don't animate this axis again in the next iteration.","\t\t\t\t}","\t\t\t});\t\t\t","\t\t\tanimate( settings.onAfter );\t\t\t","","\t\t\tfunction animate( callback ){","\t\t\t\t$elem.animate( attr, duration, settings.easing, callback &amp;&amp; function(){","\t\t\t\t\tcallback.call(this, target);","\t\t\t\t});","\t\t\t};","\t\t\tfunction max( Dim ){","\t\t\t\tvar el = win ? $.browser.opera ? document.body : document.documentElement : elem;","\t\t\t\treturn el['scroll'+Dim] - el['client'+Dim];","\t\t\t};","\t\t});","\t};","","\tfunction both( val ){","\t\treturn typeof val == 'object' ? val : { top:val, left:val };","\t};","","})( jQuery );"];
