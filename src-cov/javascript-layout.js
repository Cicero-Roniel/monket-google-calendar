/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['javascript-layout.js']) {
  _$jscoverage['javascript-layout.js'] = [];
  _$jscoverage['javascript-layout.js'][1] = 0;
  _$jscoverage['javascript-layout.js'][2] = 0;
  _$jscoverage['javascript-layout.js'][3] = 0;
  _$jscoverage['javascript-layout.js'][4] = 0;
  _$jscoverage['javascript-layout.js'][5] = 0;
  _$jscoverage['javascript-layout.js'][6] = 0;
  _$jscoverage['javascript-layout.js'][7] = 0;
  _$jscoverage['javascript-layout.js'][10] = 0;
  _$jscoverage['javascript-layout.js'][11] = 0;
  _$jscoverage['javascript-layout.js'][12] = 0;
  _$jscoverage['javascript-layout.js'][13] = 0;
  _$jscoverage['javascript-layout.js'][14] = 0;
  _$jscoverage['javascript-layout.js'][15] = 0;
  _$jscoverage['javascript-layout.js'][16] = 0;
  _$jscoverage['javascript-layout.js'][17] = 0;
  _$jscoverage['javascript-layout.js'][18] = 0;
  _$jscoverage['javascript-layout.js'][19] = 0;
  _$jscoverage['javascript-layout.js'][20] = 0;
  _$jscoverage['javascript-layout.js'][22] = 0;
  _$jscoverage['javascript-layout.js'][23] = 0;
  _$jscoverage['javascript-layout.js'][26] = 0;
  _$jscoverage['javascript-layout.js'][27] = 0;
  _$jscoverage['javascript-layout.js'][28] = 0;
  _$jscoverage['javascript-layout.js'][30] = 0;
  _$jscoverage['javascript-layout.js'][31] = 0;
  _$jscoverage['javascript-layout.js'][34] = 0;
  _$jscoverage['javascript-layout.js'][35] = 0;
  _$jscoverage['javascript-layout.js'][36] = 0;
  _$jscoverage['javascript-layout.js'][38] = 0;
  _$jscoverage['javascript-layout.js'][39] = 0;
  _$jscoverage['javascript-layout.js'][42] = 0;
  _$jscoverage['javascript-layout.js'][43] = 0;
  _$jscoverage['javascript-layout.js'][44] = 0;
  _$jscoverage['javascript-layout.js'][45] = 0;
  _$jscoverage['javascript-layout.js'][47] = 0;
  _$jscoverage['javascript-layout.js'][48] = 0;
  _$jscoverage['javascript-layout.js'][51] = 0;
  _$jscoverage['javascript-layout.js'][52] = 0;
  _$jscoverage['javascript-layout.js'][53] = 0;
  _$jscoverage['javascript-layout.js'][55] = 0;
  _$jscoverage['javascript-layout.js'][56] = 0;
  _$jscoverage['javascript-layout.js'][59] = 0;
  _$jscoverage['javascript-layout.js'][60] = 0;
  _$jscoverage['javascript-layout.js'][61] = 0;
  _$jscoverage['javascript-layout.js'][63] = 0;
  _$jscoverage['javascript-layout.js'][64] = 0;
  _$jscoverage['javascript-layout.js'][67] = 0;
  _$jscoverage['javascript-layout.js'][68] = 0;
  _$jscoverage['javascript-layout.js'][69] = 0;
  _$jscoverage['javascript-layout.js'][71] = 0;
  _$jscoverage['javascript-layout.js'][72] = 0;
  _$jscoverage['javascript-layout.js'][75] = 0;
  _$jscoverage['javascript-layout.js'][76] = 0;
  _$jscoverage['javascript-layout.js'][77] = 0;
  _$jscoverage['javascript-layout.js'][78] = 0;
  _$jscoverage['javascript-layout.js'][79] = 0;
  _$jscoverage['javascript-layout.js'][81] = 0;
  _$jscoverage['javascript-layout.js'][82] = 0;
  _$jscoverage['javascript-layout.js'][85] = 0;
  _$jscoverage['javascript-layout.js'][86] = 0;
  _$jscoverage['javascript-layout.js'][88] = 0;
  _$jscoverage['javascript-layout.js'][89] = 0;
  _$jscoverage['javascript-layout.js'][90] = 0;
  _$jscoverage['javascript-layout.js'][92] = 0;
  _$jscoverage['javascript-layout.js'][93] = 0;
  _$jscoverage['javascript-layout.js'][96] = 0;
  _$jscoverage['javascript-layout.js'][97] = 0;
  _$jscoverage['javascript-layout.js'][98] = 0;
  _$jscoverage['javascript-layout.js'][99] = 0;
  _$jscoverage['javascript-layout.js'][100] = 0;
  _$jscoverage['javascript-layout.js'][102] = 0;
  _$jscoverage['javascript-layout.js'][103] = 0;
  _$jscoverage['javascript-layout.js'][104] = 0;
  _$jscoverage['javascript-layout.js'][105] = 0;
  _$jscoverage['javascript-layout.js'][106] = 0;
  _$jscoverage['javascript-layout.js'][107] = 0;
  _$jscoverage['javascript-layout.js'][108] = 0;
  _$jscoverage['javascript-layout.js'][109] = 0;
  _$jscoverage['javascript-layout.js'][110] = 0;
  _$jscoverage['javascript-layout.js'][111] = 0;
  _$jscoverage['javascript-layout.js'][113] = 0;
  _$jscoverage['javascript-layout.js'][114] = 0;
  _$jscoverage['javascript-layout.js'][117] = 0;
  _$jscoverage['javascript-layout.js'][118] = 0;
  _$jscoverage['javascript-layout.js'][121] = 0;
  _$jscoverage['javascript-layout.js'][122] = 0;
  _$jscoverage['javascript-layout.js'][124] = 0;
  _$jscoverage['javascript-layout.js'][125] = 0;
  _$jscoverage['javascript-layout.js'][126] = 0;
  _$jscoverage['javascript-layout.js'][127] = 0;
  _$jscoverage['javascript-layout.js'][129] = 0;
  _$jscoverage['javascript-layout.js'][130] = 0;
  _$jscoverage['javascript-layout.js'][131] = 0;
  _$jscoverage['javascript-layout.js'][132] = 0;
  _$jscoverage['javascript-layout.js'][133] = 0;
  _$jscoverage['javascript-layout.js'][134] = 0;
  _$jscoverage['javascript-layout.js'][135] = 0;
  _$jscoverage['javascript-layout.js'][136] = 0;
  _$jscoverage['javascript-layout.js'][137] = 0;
  _$jscoverage['javascript-layout.js'][138] = 0;
  _$jscoverage['javascript-layout.js'][139] = 0;
  _$jscoverage['javascript-layout.js'][140] = 0;
  _$jscoverage['javascript-layout.js'][141] = 0;
  _$jscoverage['javascript-layout.js'][142] = 0;
  _$jscoverage['javascript-layout.js'][145] = 0;
  _$jscoverage['javascript-layout.js'][146] = 0;
  _$jscoverage['javascript-layout.js'][150] = 0;
  _$jscoverage['javascript-layout.js'][151] = 0;
  _$jscoverage['javascript-layout.js'][152] = 0;
  _$jscoverage['javascript-layout.js'][153] = 0;
  _$jscoverage['javascript-layout.js'][154] = 0;
  _$jscoverage['javascript-layout.js'][156] = 0;
  _$jscoverage['javascript-layout.js'][158] = 0;
  _$jscoverage['javascript-layout.js'][160] = 0;
  _$jscoverage['javascript-layout.js'][161] = 0;
  _$jscoverage['javascript-layout.js'][162] = 0;
  _$jscoverage['javascript-layout.js'][163] = 0;
  _$jscoverage['javascript-layout.js'][165] = 0;
  _$jscoverage['javascript-layout.js'][166] = 0;
  _$jscoverage['javascript-layout.js'][167] = 0;
  _$jscoverage['javascript-layout.js'][168] = 0;
  _$jscoverage['javascript-layout.js'][169] = 0;
  _$jscoverage['javascript-layout.js'][170] = 0;
  _$jscoverage['javascript-layout.js'][171] = 0;
  _$jscoverage['javascript-layout.js'][173] = 0;
  _$jscoverage['javascript-layout.js'][174] = 0;
  _$jscoverage['javascript-layout.js'][175] = 0;
  _$jscoverage['javascript-layout.js'][176] = 0;
  _$jscoverage['javascript-layout.js'][177] = 0;
  _$jscoverage['javascript-layout.js'][178] = 0;
  _$jscoverage['javascript-layout.js'][179] = 0;
  _$jscoverage['javascript-layout.js'][180] = 0;
  _$jscoverage['javascript-layout.js'][181] = 0;
  _$jscoverage['javascript-layout.js'][183] = 0;
  _$jscoverage['javascript-layout.js'][184] = 0;
  _$jscoverage['javascript-layout.js'][185] = 0;
  _$jscoverage['javascript-layout.js'][186] = 0;
  _$jscoverage['javascript-layout.js'][188] = 0;
  _$jscoverage['javascript-layout.js'][189] = 0;
  _$jscoverage['javascript-layout.js'][190] = 0;
  _$jscoverage['javascript-layout.js'][191] = 0;
  _$jscoverage['javascript-layout.js'][192] = 0;
  _$jscoverage['javascript-layout.js'][193] = 0;
  _$jscoverage['javascript-layout.js'][196] = 0;
  _$jscoverage['javascript-layout.js'][197] = 0;
  _$jscoverage['javascript-layout.js'][199] = 0;
  _$jscoverage['javascript-layout.js'][200] = 0;
  _$jscoverage['javascript-layout.js'][208] = 0;
  _$jscoverage['javascript-layout.js'][209] = 0;
  _$jscoverage['javascript-layout.js'][210] = 0;
  _$jscoverage['javascript-layout.js'][212] = 0;
  _$jscoverage['javascript-layout.js'][213] = 0;
  _$jscoverage['javascript-layout.js'][214] = 0;
  _$jscoverage['javascript-layout.js'][215] = 0;
  _$jscoverage['javascript-layout.js'][216] = 0;
  _$jscoverage['javascript-layout.js'][217] = 0;
  _$jscoverage['javascript-layout.js'][218] = 0;
  _$jscoverage['javascript-layout.js'][219] = 0;
  _$jscoverage['javascript-layout.js'][220] = 0;
  _$jscoverage['javascript-layout.js'][221] = 0;
  _$jscoverage['javascript-layout.js'][223] = 0;
  _$jscoverage['javascript-layout.js'][224] = 0;
  _$jscoverage['javascript-layout.js'][227] = 0;
  _$jscoverage['javascript-layout.js'][228] = 0;
  _$jscoverage['javascript-layout.js'][229] = 0;
  _$jscoverage['javascript-layout.js'][230] = 0;
  _$jscoverage['javascript-layout.js'][231] = 0;
  _$jscoverage['javascript-layout.js'][233] = 0;
  _$jscoverage['javascript-layout.js'][234] = 0;
  _$jscoverage['javascript-layout.js'][237] = 0;
  _$jscoverage['javascript-layout.js'][240] = 0;
  _$jscoverage['javascript-layout.js'][241] = 0;
  _$jscoverage['javascript-layout.js'][242] = 0;
  _$jscoverage['javascript-layout.js'][243] = 0;
  _$jscoverage['javascript-layout.js'][244] = 0;
  _$jscoverage['javascript-layout.js'][245] = 0;
  _$jscoverage['javascript-layout.js'][246] = 0;
  _$jscoverage['javascript-layout.js'][247] = 0;
  _$jscoverage['javascript-layout.js'][248] = 0;
  _$jscoverage['javascript-layout.js'][251] = 0;
  _$jscoverage['javascript-layout.js'][252] = 0;
  _$jscoverage['javascript-layout.js'][253] = 0;
  _$jscoverage['javascript-layout.js'][254] = 0;
  _$jscoverage['javascript-layout.js'][255] = 0;
  _$jscoverage['javascript-layout.js'][256] = 0;
  _$jscoverage['javascript-layout.js'][257] = 0;
  _$jscoverage['javascript-layout.js'][258] = 0;
  _$jscoverage['javascript-layout.js'][259] = 0;
  _$jscoverage['javascript-layout.js'][260] = 0;
  _$jscoverage['javascript-layout.js'][263] = 0;
  _$jscoverage['javascript-layout.js'][266] = 0;
  _$jscoverage['javascript-layout.js'][267] = 0;
  _$jscoverage['javascript-layout.js'][269] = 0;
  _$jscoverage['javascript-layout.js'][270] = 0;
  _$jscoverage['javascript-layout.js'][271] = 0;
  _$jscoverage['javascript-layout.js'][272] = 0;
  _$jscoverage['javascript-layout.js'][273] = 0;
  _$jscoverage['javascript-layout.js'][274] = 0;
  _$jscoverage['javascript-layout.js'][275] = 0;
  _$jscoverage['javascript-layout.js'][277] = 0;
  _$jscoverage['javascript-layout.js'][279] = 0;
  _$jscoverage['javascript-layout.js'][280] = 0;
  _$jscoverage['javascript-layout.js'][281] = 0;
  _$jscoverage['javascript-layout.js'][282] = 0;
  _$jscoverage['javascript-layout.js'][283] = 0;
  _$jscoverage['javascript-layout.js'][285] = 0;
  _$jscoverage['javascript-layout.js'][286] = 0;
  _$jscoverage['javascript-layout.js'][287] = 0;
  _$jscoverage['javascript-layout.js'][288] = 0;
  _$jscoverage['javascript-layout.js'][290] = 0;
  _$jscoverage['javascript-layout.js'][291] = 0;
  _$jscoverage['javascript-layout.js'][292] = 0;
  _$jscoverage['javascript-layout.js'][294] = 0;
  _$jscoverage['javascript-layout.js'][296] = 0;
  _$jscoverage['javascript-layout.js'][297] = 0;
  _$jscoverage['javascript-layout.js'][299] = 0;
  _$jscoverage['javascript-layout.js'][300] = 0;
  _$jscoverage['javascript-layout.js'][301] = 0;
  _$jscoverage['javascript-layout.js'][303] = 0;
  _$jscoverage['javascript-layout.js'][304] = 0;
  _$jscoverage['javascript-layout.js'][305] = 0;
  _$jscoverage['javascript-layout.js'][307] = 0;
  _$jscoverage['javascript-layout.js'][308] = 0;
  _$jscoverage['javascript-layout.js'][309] = 0;
  _$jscoverage['javascript-layout.js'][310] = 0;
  _$jscoverage['javascript-layout.js'][312] = 0;
  _$jscoverage['javascript-layout.js'][313] = 0;
  _$jscoverage['javascript-layout.js'][316] = 0;
  _$jscoverage['javascript-layout.js'][319] = 0;
  _$jscoverage['javascript-layout.js'][320] = 0;
  _$jscoverage['javascript-layout.js'][321] = 0;
  _$jscoverage['javascript-layout.js'][322] = 0;
  _$jscoverage['javascript-layout.js'][323] = 0;
  _$jscoverage['javascript-layout.js'][324] = 0;
  _$jscoverage['javascript-layout.js'][325] = 0;
  _$jscoverage['javascript-layout.js'][326] = 0;
  _$jscoverage['javascript-layout.js'][327] = 0;
  _$jscoverage['javascript-layout.js'][328] = 0;
  _$jscoverage['javascript-layout.js'][329] = 0;
  _$jscoverage['javascript-layout.js'][330] = 0;
  _$jscoverage['javascript-layout.js'][331] = 0;
  _$jscoverage['javascript-layout.js'][332] = 0;
  _$jscoverage['javascript-layout.js'][333] = 0;
  _$jscoverage['javascript-layout.js'][336] = 0;
  _$jscoverage['javascript-layout.js'][337] = 0;
  _$jscoverage['javascript-layout.js'][339] = 0;
  _$jscoverage['javascript-layout.js'][340] = 0;
  _$jscoverage['javascript-layout.js'][341] = 0;
  _$jscoverage['javascript-layout.js'][342] = 0;
  _$jscoverage['javascript-layout.js'][343] = 0;
  _$jscoverage['javascript-layout.js'][345] = 0;
  _$jscoverage['javascript-layout.js'][346] = 0;
  _$jscoverage['javascript-layout.js'][349] = 0;
  _$jscoverage['javascript-layout.js'][350] = 0;
  _$jscoverage['javascript-layout.js'][352] = 0;
  _$jscoverage['javascript-layout.js'][353] = 0;
  _$jscoverage['javascript-layout.js'][357] = 0;
  _$jscoverage['javascript-layout.js'][358] = 0;
  _$jscoverage['javascript-layout.js'][359] = 0;
  _$jscoverage['javascript-layout.js'][361] = 0;
  _$jscoverage['javascript-layout.js'][362] = 0;
  _$jscoverage['javascript-layout.js'][363] = 0;
  _$jscoverage['javascript-layout.js'][364] = 0;
  _$jscoverage['javascript-layout.js'][368] = 0;
  _$jscoverage['javascript-layout.js'][370] = 0;
  _$jscoverage['javascript-layout.js'][372] = 0;
  _$jscoverage['javascript-layout.js'][373] = 0;
  _$jscoverage['javascript-layout.js'][374] = 0;
  _$jscoverage['javascript-layout.js'][375] = 0;
  _$jscoverage['javascript-layout.js'][377] = 0;
  _$jscoverage['javascript-layout.js'][378] = 0;
  _$jscoverage['javascript-layout.js'][379] = 0;
  _$jscoverage['javascript-layout.js'][380] = 0;
  _$jscoverage['javascript-layout.js'][382] = 0;
  _$jscoverage['javascript-layout.js'][383] = 0;
  _$jscoverage['javascript-layout.js'][384] = 0;
  _$jscoverage['javascript-layout.js'][385] = 0;
  _$jscoverage['javascript-layout.js'][386] = 0;
  _$jscoverage['javascript-layout.js'][387] = 0;
  _$jscoverage['javascript-layout.js'][389] = 0;
  _$jscoverage['javascript-layout.js'][390] = 0;
  _$jscoverage['javascript-layout.js'][391] = 0;
  _$jscoverage['javascript-layout.js'][392] = 0;
  _$jscoverage['javascript-layout.js'][393] = 0;
  _$jscoverage['javascript-layout.js'][394] = 0;
  _$jscoverage['javascript-layout.js'][396] = 0;
  _$jscoverage['javascript-layout.js'][397] = 0;
  _$jscoverage['javascript-layout.js'][398] = 0;
  _$jscoverage['javascript-layout.js'][401] = 0;
  _$jscoverage['javascript-layout.js'][402] = 0;
  _$jscoverage['javascript-layout.js'][403] = 0;
  _$jscoverage['javascript-layout.js'][405] = 0;
  _$jscoverage['javascript-layout.js'][406] = 0;
  _$jscoverage['javascript-layout.js'][407] = 0;
  _$jscoverage['javascript-layout.js'][408] = 0;
  _$jscoverage['javascript-layout.js'][409] = 0;
  _$jscoverage['javascript-layout.js'][410] = 0;
  _$jscoverage['javascript-layout.js'][413] = 0;
}
_$jscoverage['javascript-layout.js'][1]++;
(function () {
  _$jscoverage['javascript-layout.js'][2]++;
  MKT.MonketCalendarConfig = (function () {
  _$jscoverage['javascript-layout.js'][3]++;
  this.dateFormat = "#YYYY#-#MM#-#DD#";
  _$jscoverage['javascript-layout.js'][4]++;
  this.weekIdPrefix = "week-starting-";
  _$jscoverage['javascript-layout.js'][5]++;
  this.dayIdPrefix = "day-";
  _$jscoverage['javascript-layout.js'][6]++;
  this.eventColourPrefix = "colour-";
  _$jscoverage['javascript-layout.js'][7]++;
  return this;
});
  _$jscoverage['javascript-layout.js'][10]++;
  this.Calendar = (function (config, eventLoader, notification, eventLayoutManager, weekCreator, dayHighlighter) {
  _$jscoverage['javascript-layout.js'][11]++;
  this.config = config;
  _$jscoverage['javascript-layout.js'][12]++;
  this.eventLoader = eventLoader;
  _$jscoverage['javascript-layout.js'][13]++;
  this.notification = notification;
  _$jscoverage['javascript-layout.js'][14]++;
  this.eventLayoutManager = eventLayoutManager;
  _$jscoverage['javascript-layout.js'][15]++;
  this.weekCreator = weekCreator;
  _$jscoverage['javascript-layout.js'][16]++;
  this.dayHighlighter = dayHighlighter;
  _$jscoverage['javascript-layout.js'][17]++;
  this.weeksToUpdate = [];
  _$jscoverage['javascript-layout.js'][18]++;
  this.eventLoader.addEventHook = (function (__this) {
  _$jscoverage['javascript-layout.js'][19]++;
  var __func = (function (event, oldStartDate, oldEndDate) {
  _$jscoverage['javascript-layout.js'][20]++;
  return this.eventChanged(event, oldStartDate, oldEndDate);
});
  _$jscoverage['javascript-layout.js'][22]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][23]++;
  return __func.apply(__this, arguments);
});
})(this);
  _$jscoverage['javascript-layout.js'][26]++;
  this.eventLoader.updateEventHook = (function (__this) {
  _$jscoverage['javascript-layout.js'][27]++;
  var __func = (function (event, oldStartDate, oldEndDate) {
  _$jscoverage['javascript-layout.js'][28]++;
  return this.eventChanged(event, oldStartDate, oldEndDate);
});
  _$jscoverage['javascript-layout.js'][30]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][31]++;
  return __func.apply(__this, arguments);
});
})(this);
  _$jscoverage['javascript-layout.js'][34]++;
  this.eventLoader.removeEventHook = (function (__this) {
  _$jscoverage['javascript-layout.js'][35]++;
  var __func = (function (event, oldStartDate, oldEndDate) {
  _$jscoverage['javascript-layout.js'][36]++;
  return this.eventChanged(event, oldStartDate, oldEndDate);
});
  _$jscoverage['javascript-layout.js'][38]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][39]++;
  return __func.apply(__this, arguments);
});
})(this);
  _$jscoverage['javascript-layout.js'][42]++;
  this.buildWeeks(this.getStartDate());
  _$jscoverage['javascript-layout.js'][43]++;
  this.updateInterval = setInterval((function (__this) {
  _$jscoverage['javascript-layout.js'][44]++;
  var __func = (function () {
  _$jscoverage['javascript-layout.js'][45]++;
  return this.doUpdate();
});
  _$jscoverage['javascript-layout.js'][47]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][48]++;
  return __func.apply(__this, arguments);
});
})(this), 3600000);
  _$jscoverage['javascript-layout.js'][51]++;
  $("#body").mousewheel((function (__this) {
  _$jscoverage['javascript-layout.js'][52]++;
  var __func = (function (e, delta) {
  _$jscoverage['javascript-layout.js'][53]++;
  return this.doScroll(e, delta);
});
  _$jscoverage['javascript-layout.js'][55]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][56]++;
  return __func.apply(__this, arguments);
});
})(this));
  _$jscoverage['javascript-layout.js'][59]++;
  $("#body").dblclick((function (__this) {
  _$jscoverage['javascript-layout.js'][60]++;
  var __func = (function (e) {
  _$jscoverage['javascript-layout.js'][61]++;
  return this.doubleClick(e);
});
  _$jscoverage['javascript-layout.js'][63]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][64]++;
  return __func.apply(__this, arguments);
});
})(this));
  _$jscoverage['javascript-layout.js'][67]++;
  $("#body").mousedown((function (__this) {
  _$jscoverage['javascript-layout.js'][68]++;
  var __func = (function (e) {
  _$jscoverage['javascript-layout.js'][69]++;
  return this.handlePanning(e);
});
  _$jscoverage['javascript-layout.js'][71]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][72]++;
  return __func.apply(__this, arguments);
});
})(this));
  _$jscoverage['javascript-layout.js'][75]++;
  $(document).mouseup((function (__this) {
  _$jscoverage['javascript-layout.js'][76]++;
  var __func = (function () {
  _$jscoverage['javascript-layout.js'][77]++;
  $("#body").unbind("mousemove");
  _$jscoverage['javascript-layout.js'][78]++;
  $("body").css("cursor", "auto");
  _$jscoverage['javascript-layout.js'][79]++;
  return this.scrollToWeekStarting(this.topWeekStartDate);
});
  _$jscoverage['javascript-layout.js'][81]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][82]++;
  return __func.apply(__this, arguments);
});
})(this));
  _$jscoverage['javascript-layout.js'][85]++;
  document.onselectstart = (function () {
  _$jscoverage['javascript-layout.js'][86]++;
  return false;
});
  _$jscoverage['javascript-layout.js'][88]++;
  $(window).resize((function (__this) {
  _$jscoverage['javascript-layout.js'][89]++;
  var __func = (function () {
  _$jscoverage['javascript-layout.js'][90]++;
  return this.scrollToWeekStarting(this.topWeekStartDate);
});
  _$jscoverage['javascript-layout.js'][92]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][93]++;
  return __func.apply(__this, arguments);
});
})(this));
  _$jscoverage['javascript-layout.js'][96]++;
  $(document).keydown((function (__this) {
  _$jscoverage['javascript-layout.js'][97]++;
  var __func = (function (e) {
  _$jscoverage['javascript-layout.js'][98]++;
  var weeks;
  _$jscoverage['javascript-layout.js'][99]++;
  if ($(e.target).parent().hasClass("editor")) {
    _$jscoverage['javascript-layout.js'][100]++;
    return null;
  }
  _$jscoverage['javascript-layout.js'][102]++;
  if (e.keyCode === 38) {
    _$jscoverage['javascript-layout.js'][103]++;
    weeks = -1;
  }
  else {
    _$jscoverage['javascript-layout.js'][104]++;
    if (e.keyCode === 40) {
      _$jscoverage['javascript-layout.js'][105]++;
      weeks = 1;
    }
    else {
      _$jscoverage['javascript-layout.js'][106]++;
      if (e.keyCode === 33) {
        _$jscoverage['javascript-layout.js'][107]++;
        weeks = -4;
      }
      else {
        _$jscoverage['javascript-layout.js'][108]++;
        if (e.keyCode === 34) {
          _$jscoverage['javascript-layout.js'][109]++;
          weeks = 4;
        }
        else {
          _$jscoverage['javascript-layout.js'][110]++;
          if (e.keyCode === 84) {
            _$jscoverage['javascript-layout.js'][111]++;
            this.scrollToWeekStarting(new Date().addWeeks(-1));
          }
        }
      }
    }
  }
  _$jscoverage['javascript-layout.js'][113]++;
  if (weeks) {
    _$jscoverage['javascript-layout.js'][114]++;
    return this.scrollToWeekStarting(this.topWeekStartDate.addWeeks(weeks));
  }
});
  _$jscoverage['javascript-layout.js'][117]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][118]++;
  return __func.apply(__this, arguments);
});
})(this));
  _$jscoverage['javascript-layout.js'][121]++;
  this.notification.hide();
  _$jscoverage['javascript-layout.js'][122]++;
  return this;
});
  _$jscoverage['javascript-layout.js'][124]++;
  this.Calendar.prototype.handlePanning = (function (e) {
  _$jscoverage['javascript-layout.js'][125]++;
  var dayHeight, startWeek, startWeekDate, startY;
  _$jscoverage['javascript-layout.js'][126]++;
  if ($(e.target).parents().hasClass("event")) {
    _$jscoverage['javascript-layout.js'][127]++;
    return null;
  }
  _$jscoverage['javascript-layout.js'][129]++;
  dayHeight = $("#calendar .week td:first").innerHeight();
  _$jscoverage['javascript-layout.js'][130]++;
  startY = e.pageY;
  _$jscoverage['javascript-layout.js'][131]++;
  startWeekDate = this.topWeekStartDate;
  _$jscoverage['javascript-layout.js'][132]++;
  startWeek = $("#" + this.config.weekIdPrefix + startWeekDate.customFormat(this.config.dateFormat));
  _$jscoverage['javascript-layout.js'][133]++;
  $("body").css("cursor", "move");
  _$jscoverage['javascript-layout.js'][134]++;
  return $("#body").mousemove((function (__this) {
  _$jscoverage['javascript-layout.js'][135]++;
  var __func = (function (e) {
  _$jscoverage['javascript-layout.js'][136]++;
  var delta, newWeek, weeks;
  _$jscoverage['javascript-layout.js'][137]++;
  delta = - (e.pageY - startY);
  _$jscoverage['javascript-layout.js'][138]++;
  weeks = delta / 50;
  _$jscoverage['javascript-layout.js'][139]++;
  weeks = delta > 0? Math.floor(weeks): Math.ceil(weeks);
  _$jscoverage['javascript-layout.js'][140]++;
  newWeek = startWeekDate.addWeeks(weeks);
  _$jscoverage['javascript-layout.js'][141]++;
  if (newWeek - this.topWeekStartDate !== 0) {
    _$jscoverage['javascript-layout.js'][142]++;
    return this.scrollToWeekStarting(newWeek);
  }
});
  _$jscoverage['javascript-layout.js'][145]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][146]++;
  return __func.apply(__this, arguments);
});
})(this));
});
  _$jscoverage['javascript-layout.js'][150]++;
  this.Calendar.prototype.getStartDate = (function () {
  _$jscoverage['javascript-layout.js'][151]++;
  var startDate;
  _$jscoverage['javascript-layout.js'][152]++;
  startDate = this.getTodaysDate().addWeeks(-1);
  _$jscoverage['javascript-layout.js'][153]++;
  try {
    _$jscoverage['javascript-layout.js'][154]++;
    startDate = Date.parseYMD(location.hash.substring(1));
  }
  catch (exception) {
    _$jscoverage['javascript-layout.js'][156]++;
    console.log("Unable to parse location hash to date: " + location.hash + ", exception: " + exception);
  }
  _$jscoverage['javascript-layout.js'][158]++;
  return startDate;
});
  _$jscoverage['javascript-layout.js'][160]++;
  this.Calendar.prototype.getTodaysDate = (function () {
  _$jscoverage['javascript-layout.js'][161]++;
  var now;
  _$jscoverage['javascript-layout.js'][162]++;
  now = new Date();
  _$jscoverage['javascript-layout.js'][163]++;
  return new Date(now.getFullYear(), now.getMonth(), now.getDate());
});
  _$jscoverage['javascript-layout.js'][165]++;
  this.Calendar.prototype.doScroll = (function (event, delta) {
  _$jscoverage['javascript-layout.js'][166]++;
  var multiplier, week, weeks;
  _$jscoverage['javascript-layout.js'][167]++;
  multiplier = $.browser.mozilla? -3: -1;
  _$jscoverage['javascript-layout.js'][168]++;
  weeks = Math.round(delta * multiplier);
  _$jscoverage['javascript-layout.js'][169]++;
  week = this.topWeekStartDate.addWeeks(weeks);
  _$jscoverage['javascript-layout.js'][170]++;
  this.scrollToWeekStarting(week);
  _$jscoverage['javascript-layout.js'][171]++;
  return false;
});
  _$jscoverage['javascript-layout.js'][173]++;
  this.Calendar.prototype.scrollToWeekStarting = (function (date, offset, immediate) {
  _$jscoverage['javascript-layout.js'][174]++;
  var _a, duration, weekDate;
  _$jscoverage['javascript-layout.js'][175]++;
  clearTimeout(this.finishedScrollingTimeout);
  _$jscoverage['javascript-layout.js'][176]++;
  weekDate = this.getWeekStartDate(date);
  _$jscoverage['javascript-layout.js'][177]++;
  this.createWeekElementsAsRequired(weekDate.addWeeks(-2));
  _$jscoverage['javascript-layout.js'][178]++;
  this.createWeekElementsAsRequired(weekDate.addWeeks(6));
  _$jscoverage['javascript-layout.js'][179]++;
  if (! (typeof (_a = this.scrollingStartTime) !== "undefined" && _a !== null)) {
    _$jscoverage['javascript-layout.js'][180]++;
    this.scrollingStartTime = new Date();
    _$jscoverage['javascript-layout.js'][181]++;
    this.scrollingStartWeek = this.topWeekStartDate;
  }
  _$jscoverage['javascript-layout.js'][183]++;
  this.topWeekStartDate = weekDate;
  _$jscoverage['javascript-layout.js'][184]++;
  this.topWeek = $("#" + this.config.weekIdPrefix + this.topWeekStartDate.customFormat(this.config.dateFormat));
  _$jscoverage['javascript-layout.js'][185]++;
  if (this.topWeek.length < 1) {
    _$jscoverage['javascript-layout.js'][186]++;
    throw "Unable to find week to scroll to. For date: " + date.customFormat(this.config.dateFormat);
  }
  _$jscoverage['javascript-layout.js'][188]++;
  this.updateCurrentMonthLabel();
  _$jscoverage['javascript-layout.js'][189]++;
  $("#body").queue().length > 1? $("#body").queue("fx", [$("#body").queue().pop()]): null;
  _$jscoverage['javascript-layout.js'][190]++;
  Math.abs(this.topWeekStartDate - this.scrollingStartWeek) > 3024000000? (this.showingScrollNotification = true): null;
  _$jscoverage['javascript-layout.js'][191]++;
  this.showingScrollNotification? this.notification.show(this.topWeekStartDate.addWeeks(2).customFormat("#MMMM#<br>#YYYY#")): null;
  _$jscoverage['javascript-layout.js'][192]++;
  duration = immediate? 0: 200;
  _$jscoverage['javascript-layout.js'][193]++;
  return $("#body").scrollTo(this.topWeek, duration, {easing: "easeOutQuad", onAfter: (function (__this) {
  _$jscoverage['javascript-layout.js'][196]++;
  var __func = (function () {
  _$jscoverage['javascript-layout.js'][197]++;
  return this.finishedScrolling();
});
  _$jscoverage['javascript-layout.js'][199]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][200]++;
  return __func.apply(__this, arguments);
});
})(this), offset: {top: offset}});
});
  _$jscoverage['javascript-layout.js'][208]++;
  this.Calendar.prototype.setURLHash = (function () {
  _$jscoverage['javascript-layout.js'][209]++;
  location.hash = this.topWeekStartDate.customFormat(this.config.dateFormat);
  _$jscoverage['javascript-layout.js'][210]++;
  return location.hash;
});
  _$jscoverage['javascript-layout.js'][212]++;
  this.Calendar.prototype.finishedScrolling = (function () {
  _$jscoverage['javascript-layout.js'][213]++;
  clearTimeout(this.finishedScrollingTimeout);
  _$jscoverage['javascript-layout.js'][214]++;
  clearTimeout(this.finishedScrollingTimeout2);
  _$jscoverage['javascript-layout.js'][215]++;
  if ($("#body").queue().length === 0) {
    _$jscoverage['javascript-layout.js'][216]++;
    this.setURLHash();
    _$jscoverage['javascript-layout.js'][217]++;
    document.title = this.topWeekStartDate.addWeeks(2).customFormat("#MMMM# - #YYYY#") + " - Monket Google Calendar";
    _$jscoverage['javascript-layout.js'][218]++;
    this.finishedScrollingTimeout2 = setTimeout((function (__this) {
  _$jscoverage['javascript-layout.js'][219]++;
  var __func = (function () {
  _$jscoverage['javascript-layout.js'][220]++;
  this.scrollingStartTime = null;
  _$jscoverage['javascript-layout.js'][221]++;
  return this.scheduleLoadData();
});
  _$jscoverage['javascript-layout.js'][223]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][224]++;
  return __func.apply(__this, arguments);
});
})(this), 400);
    _$jscoverage['javascript-layout.js'][227]++;
    this.finishedScrollingTimeout = setTimeout((function (__this) {
  _$jscoverage['javascript-layout.js'][228]++;
  var __func = (function () {
  _$jscoverage['javascript-layout.js'][229]++;
  this.notification.hide();
  _$jscoverage['javascript-layout.js'][230]++;
  this.showingScrollNotification = false;
  _$jscoverage['javascript-layout.js'][231]++;
  return this.showingScrollNotification;
});
  _$jscoverage['javascript-layout.js'][233]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][234]++;
  return __func.apply(__this, arguments);
});
})(this), 1000);
    _$jscoverage['javascript-layout.js'][237]++;
    return this.finishedScrollingTimeout;
  }
});
  _$jscoverage['javascript-layout.js'][240]++;
  this.Calendar.prototype.createWeekElementsAsRequired = (function (date) {
  _$jscoverage['javascript-layout.js'][241]++;
  var _a, currentDate, firstWeekDate, lastWeekDate, week;
  _$jscoverage['javascript-layout.js'][242]++;
  firstWeekDate = this.weekIdToDate($("#calendar .week:first").attr("id"));
  _$jscoverage['javascript-layout.js'][243]++;
  if (date < firstWeekDate) {
    _$jscoverage['javascript-layout.js'][244]++;
    currentDate = firstWeekDate.addWeeks(-1);
    _$jscoverage['javascript-layout.js'][245]++;
    while (currentDate >= date) {
      _$jscoverage['javascript-layout.js'][246]++;
      week = this.createWeek(currentDate);
      _$jscoverage['javascript-layout.js'][247]++;
      $("#body").prepend(week);
      _$jscoverage['javascript-layout.js'][248]++;
      currentDate = currentDate.addWeeks(-1);
}
  }
  _$jscoverage['javascript-layout.js'][251]++;
  lastWeekDate = this.weekIdToDate($("#calendar .week:last").attr("id"));
  _$jscoverage['javascript-layout.js'][252]++;
  if (date > lastWeekDate) {
    _$jscoverage['javascript-layout.js'][253]++;
    currentDate = lastWeekDate.addWeeks(1);
    _$jscoverage['javascript-layout.js'][254]++;
    _a = [];
    _$jscoverage['javascript-layout.js'][255]++;
    while (currentDate <= date) {
      _$jscoverage['javascript-layout.js'][256]++;
      _a.push((function () {
  _$jscoverage['javascript-layout.js'][257]++;
  week = this.createWeek(currentDate);
  _$jscoverage['javascript-layout.js'][258]++;
  $("#body").append(week);
  _$jscoverage['javascript-layout.js'][259]++;
  currentDate = currentDate.addWeeks(1);
  _$jscoverage['javascript-layout.js'][260]++;
  return currentDate;
}).call(this));
}
    _$jscoverage['javascript-layout.js'][263]++;
    return _a;
  }
});
  _$jscoverage['javascript-layout.js'][266]++;
  this.Calendar.prototype.updateCurrentMonthLabel = (function () {
  _$jscoverage['javascript-layout.js'][267]++;
  return $("#current-month-label").text(this.topWeekStartDate.customFormat("#MMMM#"));
});
  _$jscoverage['javascript-layout.js'][269]++;
  this.Calendar.prototype.buildWeeks = (function (startDate) {
  _$jscoverage['javascript-layout.js'][270]++;
  var firstWeek, i;
  _$jscoverage['javascript-layout.js'][271]++;
  startDate = this.getWeekStartDate(startDate);
  _$jscoverage['javascript-layout.js'][272]++;
  firstWeek = startDate.addWeeks(-2);
  _$jscoverage['javascript-layout.js'][273]++;
  this.topWeekStartDate = startDate.addWeeks(-1);
  _$jscoverage['javascript-layout.js'][274]++;
  for (i = 0; i < 8; i += 1) {
    _$jscoverage['javascript-layout.js'][275]++;
    this.createWeek(firstWeek.addWeeks(i)).appendTo($("#body"));
}
  _$jscoverage['javascript-layout.js'][277]++;
  return this.scrollToWeekStarting(startDate);
});
  _$jscoverage['javascript-layout.js'][279]++;
  this.Calendar.prototype.createWeek = (function (weekStart) {
  _$jscoverage['javascript-layout.js'][280]++;
  var week;
  _$jscoverage['javascript-layout.js'][281]++;
  week = this.weekCreator.create(weekStart);
  _$jscoverage['javascript-layout.js'][282]++;
  this.addWeekToUpdate(weekStart);
  _$jscoverage['javascript-layout.js'][283]++;
  return week;
});
  _$jscoverage['javascript-layout.js'][285]++;
  this.Calendar.prototype.weekIdToDate = (function (id) {
  _$jscoverage['javascript-layout.js'][286]++;
  var dateString;
  _$jscoverage['javascript-layout.js'][287]++;
  dateString = id.substring(this.config.weekIdPrefix.length);
  _$jscoverage['javascript-layout.js'][288]++;
  return Date.parseYMD(dateString);
});
  _$jscoverage['javascript-layout.js'][290]++;
  this.Calendar.prototype.getWeekStartDate = (function (date) {
  _$jscoverage['javascript-layout.js'][291]++;
  while (date.getDay() !== 1) {
    _$jscoverage['javascript-layout.js'][292]++;
    date = date.addDays(-1);
}
  _$jscoverage['javascript-layout.js'][294]++;
  return date;
});
  _$jscoverage['javascript-layout.js'][296]++;
  this.Calendar.prototype.doUpdate = (function () {
  _$jscoverage['javascript-layout.js'][297]++;
  return this.dayHighlighter.highlightToday();
});
  _$jscoverage['javascript-layout.js'][299]++;
  this.Calendar.prototype.addWeekToUpdate = (function (date) {
  _$jscoverage['javascript-layout.js'][300]++;
  this.weeksToUpdate.push(date);
  _$jscoverage['javascript-layout.js'][301]++;
  return this.scheduleLoadData();
});
  _$jscoverage['javascript-layout.js'][303]++;
  this.Calendar.prototype.scheduleLoadData = (function () {
  _$jscoverage['javascript-layout.js'][304]++;
  if (this.scrollingStartTime) {
    _$jscoverage['javascript-layout.js'][305]++;
    return null;
  }
  _$jscoverage['javascript-layout.js'][307]++;
  if (! this.loadDataTimeout && this.weeksToUpdate.length > 0) {
    _$jscoverage['javascript-layout.js'][308]++;
    this.loadDataTimeout = setTimeout((function (__this) {
  _$jscoverage['javascript-layout.js'][309]++;
  var __func = (function () {
  _$jscoverage['javascript-layout.js'][310]++;
  return this.loadData();
});
  _$jscoverage['javascript-layout.js'][312]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][313]++;
  return __func.apply(__this, arguments);
});
})(this), 10);
    _$jscoverage['javascript-layout.js'][316]++;
    return this.loadDataTimeout;
  }
});
  _$jscoverage['javascript-layout.js'][319]++;
  this.Calendar.prototype.loadData = (function () {
  _$jscoverage['javascript-layout.js'][320]++;
  var middleWeekDate, nearestDate, nearestDifference, nearestIndex;
  _$jscoverage['javascript-layout.js'][321]++;
  this.loadDataTimeout = null;
  _$jscoverage['javascript-layout.js'][322]++;
  middleWeekDate = this.topWeekStartDate.addWeeks(2);
  _$jscoverage['javascript-layout.js'][323]++;
  nearestDate = this.weeksToUpdate[0];
  _$jscoverage['javascript-layout.js'][324]++;
  nearestIndex = 0;
  _$jscoverage['javascript-layout.js'][325]++;
  nearestDifference = Math.abs(nearestDate - middleWeekDate);
  _$jscoverage['javascript-layout.js'][326]++;
  $.each(this.weeksToUpdate, (function (i, weekDate) {
  _$jscoverage['javascript-layout.js'][327]++;
  var difference;
  _$jscoverage['javascript-layout.js'][328]++;
  difference = Math.abs(weekDate - middleWeekDate);
  _$jscoverage['javascript-layout.js'][329]++;
  if (difference < nearestDifference) {
    _$jscoverage['javascript-layout.js'][330]++;
    nearestDifference = difference;
    _$jscoverage['javascript-layout.js'][331]++;
    nearestIndex = i;
    _$jscoverage['javascript-layout.js'][332]++;
    nearestDate = weekDate;
    _$jscoverage['javascript-layout.js'][333]++;
    return nearestDate;
  }
}));
  _$jscoverage['javascript-layout.js'][336]++;
  Array.remove(this.weeksToUpdate, nearestIndex);
  _$jscoverage['javascript-layout.js'][337]++;
  return this.loadWeek(nearestDate);
});
  _$jscoverage['javascript-layout.js'][339]++;
  this.Calendar.prototype.loadWeek = (function (startDate) {
  _$jscoverage['javascript-layout.js'][340]++;
  $("#" + this.config.weekIdPrefix + startDate.customFormat(this.config.dateFormat)).removeClass("queued").addClass("loading");
  _$jscoverage['javascript-layout.js'][341]++;
  return this.eventLoader.load(startDate, startDate.addDays(6), (function (__this) {
  _$jscoverage['javascript-layout.js'][342]++;
  var __func = (function (events, startDate, endDate) {
  _$jscoverage['javascript-layout.js'][343]++;
  return this.eventLoadCallback(events, startDate, endDate);
});
  _$jscoverage['javascript-layout.js'][345]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][346]++;
  return __func.apply(__this, arguments);
});
})(this), (function (__this) {
  _$jscoverage['javascript-layout.js'][349]++;
  var __func = (function (startDate, endDate) {
  _$jscoverage['javascript-layout.js'][350]++;
  return this.eventLoadFailed(startDate, endDate);
});
  _$jscoverage['javascript-layout.js'][352]++;
  return (function () {
  _$jscoverage['javascript-layout.js'][353]++;
  return __func.apply(__this, arguments);
});
})(this));
});
  _$jscoverage['javascript-layout.js'][357]++;
  this.Calendar.prototype.eventLoadFailed = (function (startDate, endDate) {
  _$jscoverage['javascript-layout.js'][358]++;
  $("#" + this.config.weekIdPrefix + startDate.customFormat(this.config.dateFormat)).addClass("failed-loading");
  _$jscoverage['javascript-layout.js'][359]++;
  return this.scheduleLoadData();
});
  _$jscoverage['javascript-layout.js'][361]++;
  this.Calendar.prototype.eventLoadCallback = (function (events, startDate, endDate) {
  _$jscoverage['javascript-layout.js'][362]++;
  try {
    _$jscoverage['javascript-layout.js'][363]++;
    this.eventLayoutManager.layoutEventsForWeek(startDate, events);
    _$jscoverage['javascript-layout.js'][364]++;
    $("#" + this.config.weekIdPrefix + startDate.customFormat(this.config.dateFormat)).removeClass("loading").addClass("loaded").animate({opacity: 1}, 200);
  }
  catch (exception) {
    _$jscoverage['javascript-layout.js'][368]++;
    console.log("Unable to update week.", exception);
  }
  _$jscoverage['javascript-layout.js'][370]++;
  return this.scheduleLoadData();
});
  _$jscoverage['javascript-layout.js'][372]++;
  this.Calendar.prototype.doubleClick = (function (e) {
  _$jscoverage['javascript-layout.js'][373]++;
  var date, dateString, day, event, id, week;
  _$jscoverage['javascript-layout.js'][374]++;
  if (! $(e.target).hasClass("day")) {
    _$jscoverage['javascript-layout.js'][375]++;
    return null;
  }
  _$jscoverage['javascript-layout.js'][377]++;
  day = $(e.target);
  _$jscoverage['javascript-layout.js'][378]++;
  week = $(e.target).parents(".week");
  _$jscoverage['javascript-layout.js'][379]++;
  if (! week.hasClass("loaded")) {
    _$jscoverage['javascript-layout.js'][380]++;
    return null;
  }
  _$jscoverage['javascript-layout.js'][382]++;
  id = $(e.target).attr("id");
  _$jscoverage['javascript-layout.js'][383]++;
  dateString = id.substring(this.config.dayIdPrefix.length);
  _$jscoverage['javascript-layout.js'][384]++;
  date = Date.parseYMD(dateString);
  _$jscoverage['javascript-layout.js'][385]++;
  event = this.eventLoader.createEventObject("", 0, date, date.addDays(1), 1, true, null, true);
  _$jscoverage['javascript-layout.js'][386]++;
  this.eventLoader.addEvent(event);
  _$jscoverage['javascript-layout.js'][387]++;
  return $(".new", day).click();
});
  _$jscoverage['javascript-layout.js'][389]++;
  this.Calendar.prototype.eventChanged = (function (event, oldStartDate, oldEndDate) {
  _$jscoverage['javascript-layout.js'][390]++;
  var _a, startDate;
  _$jscoverage['javascript-layout.js'][391]++;
  if (oldStartDate && oldEndDate) {
    _$jscoverage['javascript-layout.js'][392]++;
    startDate = oldStartDate;
    _$jscoverage['javascript-layout.js'][393]++;
    while (startDate.getDay() !== 1) {
      _$jscoverage['javascript-layout.js'][394]++;
      startDate = startDate.addDays(-1);
}
    _$jscoverage['javascript-layout.js'][396]++;
    while (startDate < oldEndDate) {
      _$jscoverage['javascript-layout.js'][397]++;
      this.eventLayoutManager.layoutEventsForWeek(startDate, this.eventLoader.getCachedEvents(startDate, startDate.addDays(6)));
      _$jscoverage['javascript-layout.js'][398]++;
      startDate = startDate.addWeeks(1);
}
  }
  _$jscoverage['javascript-layout.js'][401]++;
  startDate = event.start;
  _$jscoverage['javascript-layout.js'][402]++;
  while (startDate.getDay() !== 1) {
    _$jscoverage['javascript-layout.js'][403]++;
    startDate = startDate.addDays(-1);
}
  _$jscoverage['javascript-layout.js'][405]++;
  _a = [];
  _$jscoverage['javascript-layout.js'][406]++;
  while (startDate < event.end) {
    _$jscoverage['javascript-layout.js'][407]++;
    _a.push((function () {
  _$jscoverage['javascript-layout.js'][408]++;
  this.eventLayoutManager.layoutEventsForWeek(startDate, this.eventLoader.getCachedEvents(startDate, startDate.addDays(6)));
  _$jscoverage['javascript-layout.js'][409]++;
  startDate = startDate.addWeeks(1);
  _$jscoverage['javascript-layout.js'][410]++;
  return startDate;
}).call(this));
}
  _$jscoverage['javascript-layout.js'][413]++;
  return _a;
});
})();
_$jscoverage['javascript-layout.js'].source = ["(function(){","  MKT.MonketCalendarConfig = function() {","    this.dateFormat = \"#YYYY#-#MM#-#DD#\";","    this.weekIdPrefix = \"week-starting-\";","    this.dayIdPrefix = \"day-\";","    this.eventColourPrefix = \"colour-\";","    return this;","  };","","  this.Calendar = function(config, eventLoader, notification, eventLayoutManager, weekCreator, dayHighlighter) {","    this.config = config;","    this.eventLoader = eventLoader;","    this.notification = notification;","    this.eventLayoutManager = eventLayoutManager;","    this.weekCreator = weekCreator;","    this.dayHighlighter = dayHighlighter;","    this.weeksToUpdate = [];","    this.eventLoader.addEventHook = (function(__this) {","      var __func = function(event, oldStartDate, oldEndDate) {","        return this.eventChanged(event, oldStartDate, oldEndDate);","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this);","    this.eventLoader.updateEventHook = (function(__this) {","      var __func = function(event, oldStartDate, oldEndDate) {","        return this.eventChanged(event, oldStartDate, oldEndDate);","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this);","    this.eventLoader.removeEventHook = (function(__this) {","      var __func = function(event, oldStartDate, oldEndDate) {","        return this.eventChanged(event, oldStartDate, oldEndDate);","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this);","    this.buildWeeks(this.getStartDate());","    this.updateInterval = setInterval(((function(__this) {","      var __func = function() {","        return this.doUpdate();","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this)), 1000 * 60 * 60);","    $(\"#body\").mousewheel((function(__this) {","      var __func = function(e, delta) {","        return this.doScroll(e, delta);","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this));","    $('#body').dblclick((function(__this) {","      var __func = function(e) {","        return this.doubleClick(e);","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this));","    $('#body').mousedown((function(__this) {","      var __func = function(e) {","        return this.handlePanning(e);","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this));","    $(document).mouseup((function(__this) {","      var __func = function() {","        $('#body').unbind('mousemove');","        $('body').css('cursor', 'auto');","        return this.scrollToWeekStarting(this.topWeekStartDate);","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this));","    document.onselectstart = function() {","      return false;","    };","    $(window).resize((function(__this) {","      var __func = function() {","        return this.scrollToWeekStarting(this.topWeekStartDate);","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this));","    $(document).keydown((function(__this) {","      var __func = function(e) {","        var weeks;","        if ($(e.target).parent().hasClass('editor')) {","          return null;","        }","        if (e.keyCode === 38) {","          weeks = -1;","        } else if (e.keyCode === 40) {","          weeks = 1;","        } else if (e.keyCode === 33) {","          weeks = -4;","        } else if (e.keyCode === 34) {","          weeks = 4;","        } else if (e.keyCode === 84) {","          this.scrollToWeekStarting(new Date().addWeeks(-1));","        }","        if (weeks) {","          return this.scrollToWeekStarting(this.topWeekStartDate.addWeeks(weeks));","        }","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this));","    this.notification.hide();","    return this;","  };","  this.Calendar.prototype.handlePanning = function(e) {","    var dayHeight, startWeek, startWeekDate, startY;","    if ($(e.target).parents().hasClass('event')) {","      return null;","    }","    dayHeight = $(\"#calendar .week td:first\").innerHeight();","    startY = e.pageY;","    startWeekDate = this.topWeekStartDate;","    startWeek = $(\"#\" + this.config.weekIdPrefix + startWeekDate.customFormat(this.config.dateFormat));","    $('body').css('cursor', 'move');","    return $('#body').mousemove((function(__this) {","      var __func = function(e) {","        var delta, newWeek, weeks;","        delta = -(e.pageY - startY);","        weeks = delta / 50;","        weeks = delta &gt; 0 ? Math.floor(weeks) : Math.ceil(weeks);","        newWeek = startWeekDate.addWeeks(weeks);","        if (newWeek - this.topWeekStartDate !== 0) {","          return this.scrollToWeekStarting(newWeek);","        }","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this));","  };","  this.Calendar.prototype.getStartDate = function() {","    var startDate;","    startDate = this.getTodaysDate().addWeeks(-1);","    try {","      startDate = Date.parseYMD(location.hash.substring(1));","    } catch (exception) {","      console.log(\"Unable to parse location hash to date: \" + location.hash + \", exception: \" + exception);","    }","    return startDate;","  };","  this.Calendar.prototype.getTodaysDate = function() {","    var now;","    now = new Date();","    return new Date(now.getFullYear(), now.getMonth(), now.getDate());","  };","  this.Calendar.prototype.doScroll = function(event, delta) {","    var multiplier, week, weeks;","    multiplier = $.browser.mozilla ? -3 : -1;","    weeks = Math.round(delta * multiplier);","    week = this.topWeekStartDate.addWeeks(weeks);","    this.scrollToWeekStarting(week);","    return false;","  };","  this.Calendar.prototype.scrollToWeekStarting = function(date, offset, immediate) {","    var _a, duration, weekDate;","    clearTimeout(this.finishedScrollingTimeout);","    weekDate = this.getWeekStartDate(date);","    this.createWeekElementsAsRequired(weekDate.addWeeks(-2));","    this.createWeekElementsAsRequired(weekDate.addWeeks(6));","    if (!(typeof (_a = this.scrollingStartTime) !== \"undefined\" &amp;&amp; _a !== null)) {","      this.scrollingStartTime = new Date();","      this.scrollingStartWeek = this.topWeekStartDate;","    }","    this.topWeekStartDate = weekDate;","    this.topWeek = $(\"#\" + this.config.weekIdPrefix + this.topWeekStartDate.customFormat(this.config.dateFormat));","    if (this.topWeek.length &lt; 1) {","      throw \"Unable to find week to scroll to. For date: \" + date.customFormat(this.config.dateFormat);","    }","    this.updateCurrentMonthLabel();","    $(\"#body\").queue().length &gt; 1 ? $(\"#body\").queue(\"fx\", [$(\"#body\").queue().pop()]) : null;","    Math.abs(this.topWeekStartDate - this.scrollingStartWeek) &gt; 3024000000 ? (this.showingScrollNotification = true) : null;","    this.showingScrollNotification ? this.notification.show(this.topWeekStartDate.addWeeks(2).customFormat(\"#MMMM#&lt;br&gt;#YYYY#\")) : null;","    duration = immediate ? 0 : 200;","    return $(\"#body\").scrollTo(this.topWeek, duration, {","      easing: 'easeOutQuad',","      onAfter: ((function(__this) {","        var __func = function() {","          return this.finishedScrolling();","        };","        return (function() {","          return __func.apply(__this, arguments);","        });","      })(this)),","      offset: {","        top: offset","      }","    });","  };","  this.Calendar.prototype.setURLHash = function() {","    location.hash = this.topWeekStartDate.customFormat(this.config.dateFormat);","    return location.hash;","  };","  this.Calendar.prototype.finishedScrolling = function() {","    clearTimeout(this.finishedScrollingTimeout);","    clearTimeout(this.finishedScrollingTimeout2);","    if ($(\"#body\").queue().length === 0) {","      this.setURLHash();","      document.title = this.topWeekStartDate.addWeeks(2).customFormat(\"#MMMM# - #YYYY#\") + ' - Monket Google Calendar';","      this.finishedScrollingTimeout2 = setTimeout(((function(__this) {","        var __func = function() {","          this.scrollingStartTime = null;","          return this.scheduleLoadData();","        };","        return (function() {","          return __func.apply(__this, arguments);","        });","      })(this)), 400);","      this.finishedScrollingTimeout = setTimeout(((function(__this) {","        var __func = function() {","          this.notification.hide();","          this.showingScrollNotification = false;","          return this.showingScrollNotification;","        };","        return (function() {","          return __func.apply(__this, arguments);","        });","      })(this)), 1000);","      return this.finishedScrollingTimeout;","    }","  };","  this.Calendar.prototype.createWeekElementsAsRequired = function(date) {","    var _a, currentDate, firstWeekDate, lastWeekDate, week;","    firstWeekDate = this.weekIdToDate($(\"#calendar .week:first\").attr(\"id\"));","    if (date &lt; firstWeekDate) {","      currentDate = firstWeekDate.addWeeks(-1);","      while (currentDate &gt;= date) {","        week = this.createWeek(currentDate);","        $(\"#body\").prepend(week);","        currentDate = currentDate.addWeeks(-1);","      }","    }","    lastWeekDate = this.weekIdToDate($(\"#calendar .week:last\").attr(\"id\"));","    if (date &gt; lastWeekDate) {","      currentDate = lastWeekDate.addWeeks(1);","      _a = [];","      while (currentDate &lt;= date) {","        _a.push((function() {","          week = this.createWeek(currentDate);","          $(\"#body\").append(week);","          currentDate = currentDate.addWeeks(1);","          return currentDate;","        }).call(this));","      }","      return _a;","    }","  };","  this.Calendar.prototype.updateCurrentMonthLabel = function() {","    return $(\"#current-month-label\").text(this.topWeekStartDate.customFormat(\"#MMMM#\"));","  };","  this.Calendar.prototype.buildWeeks = function(startDate) {","    var firstWeek, i;","    startDate = this.getWeekStartDate(startDate);","    firstWeek = startDate.addWeeks(-2);","    this.topWeekStartDate = startDate.addWeeks(-1);","    for (i = 0; i &lt; 8; i += 1) {","      this.createWeek(firstWeek.addWeeks(i)).appendTo($(\"#body\"));","    }","    return this.scrollToWeekStarting(startDate);","  };","  this.Calendar.prototype.createWeek = function(weekStart) {","    var week;","    week = this.weekCreator.create(weekStart);","    this.addWeekToUpdate(weekStart);","    return week;","  };","  this.Calendar.prototype.weekIdToDate = function(id) {","    var dateString;","    dateString = id.substring(this.config.weekIdPrefix.length);","    return Date.parseYMD(dateString);","  };","  this.Calendar.prototype.getWeekStartDate = function(date) {","    while (date.getDay() !== 1) {","      date = date.addDays(-1);","    }","    return date;","  };","  this.Calendar.prototype.doUpdate = function() {","    return this.dayHighlighter.highlightToday();","  };","  this.Calendar.prototype.addWeekToUpdate = function(date) {","    this.weeksToUpdate.push(date);","    return this.scheduleLoadData();","  };","  this.Calendar.prototype.scheduleLoadData = function() {","    if (this.scrollingStartTime) {","      return null;","    }","    if (!this.loadDataTimeout &amp;&amp; this.weeksToUpdate.length &gt; 0) {","      this.loadDataTimeout = setTimeout(((function(__this) {","        var __func = function() {","          return this.loadData();","        };","        return (function() {","          return __func.apply(__this, arguments);","        });","      })(this)), 10);","      return this.loadDataTimeout;","    }","  };","  this.Calendar.prototype.loadData = function() {","    var middleWeekDate, nearestDate, nearestDifference, nearestIndex;","    this.loadDataTimeout = null;","    middleWeekDate = this.topWeekStartDate.addWeeks(2);","    nearestDate = this.weeksToUpdate[0];","    nearestIndex = 0;","    nearestDifference = Math.abs(nearestDate - middleWeekDate);","    $.each(this.weeksToUpdate, function(i, weekDate) {","      var difference;","      difference = Math.abs(weekDate - middleWeekDate);","      if (difference &lt; nearestDifference) {","        nearestDifference = difference;","        nearestIndex = i;","        nearestDate = weekDate;","        return nearestDate;","      }","    });","    Array.remove(this.weeksToUpdate, nearestIndex);","    return this.loadWeek(nearestDate);","  };","  this.Calendar.prototype.loadWeek = function(startDate) {","    $(\"#\" + this.config.weekIdPrefix + startDate.customFormat(this.config.dateFormat)).removeClass('queued').addClass(\"loading\");","    return this.eventLoader.load(startDate, startDate.addDays(6), ((function(__this) {","      var __func = function(events, startDate, endDate) {","        return this.eventLoadCallback(events, startDate, endDate);","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this)), (function(__this) {","      var __func = function(startDate, endDate) {","        return this.eventLoadFailed(startDate, endDate);","      };","      return (function() {","        return __func.apply(__this, arguments);","      });","    })(this));","  };","  this.Calendar.prototype.eventLoadFailed = function(startDate, endDate) {","    $(\"#\" + this.config.weekIdPrefix + startDate.customFormat(this.config.dateFormat)).addClass(\"failed-loading\");","    return this.scheduleLoadData();","  };","  this.Calendar.prototype.eventLoadCallback = function(events, startDate, endDate) {","    try {","      this.eventLayoutManager.layoutEventsForWeek(startDate, events);","      $(\"#\" + this.config.weekIdPrefix + startDate.customFormat(this.config.dateFormat)).removeClass(\"loading\").addClass(\"loaded\").animate({","        opacity: 1","      }, 200);","    } catch (exception) {","      console.log(\"Unable to update week.\", exception);","    }","    return this.scheduleLoadData();","  };","  this.Calendar.prototype.doubleClick = function(e) {","    var date, dateString, day, event, id, week;","    if (!($(e.target).hasClass('day'))) {","      return null;","    }","    day = $(e.target);","    week = $(e.target).parents('.week');","    if (!(week.hasClass('loaded'))) {","      return null;","    }","    id = $(e.target).attr('id');","    dateString = id.substring(this.config.dayIdPrefix.length);","    date = Date.parseYMD(dateString);","    event = this.eventLoader.createEventObject('', 0, date, date.addDays(1), 1, true, null, true);","    this.eventLoader.addEvent(event);","    return $('.new', day).click();","  };","  this.Calendar.prototype.eventChanged = function(event, oldStartDate, oldEndDate) {","    var _a, startDate;","    if (oldStartDate &amp;&amp; oldEndDate) {","      startDate = oldStartDate;","      while (startDate.getDay() !== 1) {","        startDate = startDate.addDays(-1);","      }","      while (startDate &lt; oldEndDate) {","        this.eventLayoutManager.layoutEventsForWeek(startDate, this.eventLoader.getCachedEvents(startDate, startDate.addDays(6)));","        startDate = startDate.addWeeks(1);","      }","    }","    startDate = event.start;","    while (startDate.getDay() !== 1) {","      startDate = startDate.addDays(-1);","    }","    _a = [];","    while (startDate &lt; event.end) {","      _a.push((function() {","        this.eventLayoutManager.layoutEventsForWeek(startDate, this.eventLoader.getCachedEvents(startDate, startDate.addDays(6)));","        startDate = startDate.addWeeks(1);","        return startDate;","      }).call(this));","    }","    return _a;","  };","","})();"];
