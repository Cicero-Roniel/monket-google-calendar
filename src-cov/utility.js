/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['utility.js']) {
  _$jscoverage['utility.js'] = [];
  _$jscoverage['utility.js'][1] = 0;
  _$jscoverage['utility.js'][2] = 0;
  _$jscoverage['utility.js'][3] = 0;
  _$jscoverage['utility.js'][4] = 0;
  _$jscoverage['utility.js'][5] = 0;
  _$jscoverage['utility.js'][6] = 0;
  _$jscoverage['utility.js'][7] = 0;
  _$jscoverage['utility.js'][9] = 0;
  _$jscoverage['utility.js'][11] = 0;
  _$jscoverage['utility.js'][12] = 0;
  _$jscoverage['utility.js'][13] = 0;
  _$jscoverage['utility.js'][14] = 0;
  _$jscoverage['utility.js'][15] = 0;
  _$jscoverage['utility.js'][17] = 0;
  _$jscoverage['utility.js'][18] = 0;
  _$jscoverage['utility.js'][20] = 0;
  _$jscoverage['utility.js'][21] = 0;
  _$jscoverage['utility.js'][22] = 0;
  _$jscoverage['utility.js'][23] = 0;
  _$jscoverage['utility.js'][24] = 0;
  _$jscoverage['utility.js'][25] = 0;
  _$jscoverage['utility.js'][26] = 0;
  _$jscoverage['utility.js'][27] = 0;
  _$jscoverage['utility.js'][28] = 0;
  _$jscoverage['utility.js'][30] = 0;
  _$jscoverage['utility.js'][31] = 0;
  _$jscoverage['utility.js'][32] = 0;
  _$jscoverage['utility.js'][34] = 0;
  _$jscoverage['utility.js'][35] = 0;
  _$jscoverage['utility.js'][37] = 0;
  _$jscoverage['utility.js'][38] = 0;
  _$jscoverage['utility.js'][39] = 0;
  _$jscoverage['utility.js'][40] = 0;
  _$jscoverage['utility.js'][41] = 0;
  _$jscoverage['utility.js'][43] = 0;
  _$jscoverage['utility.js'][44] = 0;
  _$jscoverage['utility.js'][45] = 0;
  _$jscoverage['utility.js'][46] = 0;
  _$jscoverage['utility.js'][47] = 0;
  _$jscoverage['utility.js'][49] = 0;
  _$jscoverage['utility.js'][52] = 0;
  _$jscoverage['utility.js'][53] = 0;
  _$jscoverage['utility.js'][54] = 0;
  _$jscoverage['utility.js'][55] = 0;
  _$jscoverage['utility.js'][56] = 0;
}
_$jscoverage['utility.js'][1]++;
(function () {
  _$jscoverage['utility.js'][2]++;
  var _a, _b;
  _$jscoverage['utility.js'][3]++;
  Date.parseYMD = (function (dateString) {
  _$jscoverage['utility.js'][4]++;
  var dateValues;
  _$jscoverage['utility.js'][5]++;
  dateValues = dateString.split("-");
  _$jscoverage['utility.js'][6]++;
  if (dateValues.length !== 3) {
    _$jscoverage['utility.js'][7]++;
    throw "Unable to parse date string: " + dateString;
  }
  _$jscoverage['utility.js'][9]++;
  return new Date(dateValues[0], dateValues[1] - 1, dateValues[2]);
});
  _$jscoverage['utility.js'][11]++;
  Date.prototype.addDays = (function (numDays) {
  _$jscoverage['utility.js'][12]++;
  var date;
  _$jscoverage['utility.js'][13]++;
  date = new Date(this.getTime());
  _$jscoverage['utility.js'][14]++;
  date.setDate(date.getDate() + numDays);
  _$jscoverage['utility.js'][15]++;
  return date;
});
  _$jscoverage['utility.js'][17]++;
  Date.prototype.addWeeks = (function (numWeeks) {
  _$jscoverage['utility.js'][18]++;
  return this.addDays(numWeeks * 7);
});
  _$jscoverage['utility.js'][20]++;
  Date.prototype.customFormat = (function (formatString) {
  _$jscoverage['utility.js'][21]++;
  var YYYY, YY, MMMM, MMM, MM, M, DDDD, DDD, DD, D, hhh, hh, h, mm, m, ss, s, ampm, dMod, th;
  _$jscoverage['utility.js'][22]++;
  YY = ((YYYY = this.getFullYear()) + "").substr(2, 2);
  _$jscoverage['utility.js'][23]++;
  MM = (M = this.getMonth() + 1) < 10? ("0" + M): M;
  _$jscoverage['utility.js'][24]++;
  MMM = (MMMM = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"][M - 1]).substr(0, 3);
  _$jscoverage['utility.js'][25]++;
  DD = (D = this.getDate()) < 10? ("0" + D): D;
  _$jscoverage['utility.js'][26]++;
  DDD = (DDDD = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"][this.getDay()]).substr(0, 3);
  _$jscoverage['utility.js'][27]++;
  th = (D >= 10 && D <= 20)? "th": ((dMod = D % 10) == 1)? "st": (dMod == 2)? "nd": (dMod == 3)? "rd": "th";
  _$jscoverage['utility.js'][28]++;
  formatString = formatString.replace("#YYYY#", YYYY).replace("#YY#", YY).replace("#MMMM#", MMMM).replace("#MMM#", MMM).replace("#MM#", MM).replace("#M#", M).replace("#DDDD#", DDDD).replace("#DDD#", DDD).replace("#DD#", DD).replace("#D#", D).replace("#th#", th);
  _$jscoverage['utility.js'][30]++;
  h = (hhh = this.getHours());
  _$jscoverage['utility.js'][31]++;
  if (h === 0) {
    _$jscoverage['utility.js'][32]++;
    h = 24;
  }
  _$jscoverage['utility.js'][34]++;
  if (h > 12) {
    _$jscoverage['utility.js'][35]++;
    h -= 12;
  }
  _$jscoverage['utility.js'][37]++;
  hh = h < 10? ("0" + h): h;
  _$jscoverage['utility.js'][38]++;
  ampm = hhh < 12? "am": "pm";
  _$jscoverage['utility.js'][39]++;
  mm = (m = this.getMinutes()) < 10? ("0" + m): m;
  _$jscoverage['utility.js'][40]++;
  ss = (s = this.getSeconds()) < 10? ("0" + s): s;
  _$jscoverage['utility.js'][41]++;
  return formatString.replace("#hhh#", hhh).replace("#hh#", hh).replace("#h#", h).replace("#mm#", mm).replace("#m#", m).replace("#ss#", ss).replace("#s#", s).replace("#ampm#", ampm);
});
  _$jscoverage['utility.js'][43]++;
  String.prototype.endsWith = (typeof (_a = String.prototype.endsWith) !== "undefined" && _a !== null)? String.prototype.endsWith: (function (suffix) {
  _$jscoverage['utility.js'][44]++;
  var startPos;
  _$jscoverage['utility.js'][45]++;
  startPos = this.length - suffix.length;
  _$jscoverage['utility.js'][46]++;
  if (startPos >= 0) {
    _$jscoverage['utility.js'][47]++;
    return this.lastIndexOf(suffix, startPos) === startPos;
  }
  else {
    _$jscoverage['utility.js'][49]++;
    return false;
  }
});
  _$jscoverage['utility.js'][52]++;
  Array.remove = (typeof (_b = Array.remove) !== "undefined" && _b !== null)? Array.remove: (function (array, from, to) {
  _$jscoverage['utility.js'][53]++;
  var rest;
  _$jscoverage['utility.js'][54]++;
  rest = array.slice((to || from) + 1 || array.length);
  _$jscoverage['utility.js'][55]++;
  array.length = from < 0? array.length + from: from;
  _$jscoverage['utility.js'][56]++;
  return array.push.apply(array, rest);
});
})();
_$jscoverage['utility.js'].source = ["(function(){","  var _a, _b;","  Date.parseYMD = function(dateString) {","    var dateValues;","    dateValues = dateString.split(\"-\");","    if (dateValues.length !== 3) {","      throw \"Unable to parse date string: \" + dateString;","    }","    return new Date(dateValues[0], dateValues[1] - 1, dateValues[2]);","  };","  Date.prototype.addDays = function(numDays) {","    var date;","    date = new Date(this.getTime());","    date.setDate(date.getDate() + numDays);","    return date;","  };","  Date.prototype.addWeeks = function(numWeeks) {","    return this.addDays(numWeeks * 7);","  };","  Date.prototype.customFormat=function(formatString) {","   var YYYY,YY,MMMM,MMM,MM,M,DDDD,DDD,DD,D,hhh,hh,h,mm,m,ss,s,ampm,dMod,th;","   YY = ((YYYY=this.getFullYear())+\"\").substr(2,2);","   MM = (M=this.getMonth()+1)&lt;10?('0'+M):M;","   MMM = (MMMM=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"][M-1]).substr(0,3);","   DD = (D=this.getDate())&lt;10?('0'+D):D;","   DDD = (DDDD=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"][this.getDay()]).substr(0,3);","   th=(D&gt;=10&amp;&amp;D&lt;=20)?'th':((dMod=D%10)==1)?'st':(dMod==2)?'nd':(dMod==3)?'rd':'th';","   formatString = formatString.replace(\"#YYYY#\",YYYY).replace(\"#YY#\",YY).replace(\"#MMMM#\",MMMM).replace(\"#MMM#\",MMM).replace(\"#MM#\",MM).replace(\"#M#\",M).replace(\"#DDDD#\",DDDD).replace(\"#DDD#\",DDD).replace(\"#DD#\",DD).replace(\"#D#\",D).replace(\"#th#\",th);","","   h=(hhh=this.getHours());","   if (h === 0) {","\t\th=24;","\t}","   if (h&gt;12) {","\t\th-=12;","\t}","   hh = h&lt;10?('0'+h):h;","   ampm=hhh&lt;12?'am':'pm';","   mm=(m=this.getMinutes())&lt;10?('0'+m):m;","   ss=(s=this.getSeconds())&lt;10?('0'+s):s;","   return formatString.replace(\"#hhh#\",hhh).replace(\"#hh#\",hh).replace(\"#h#\",h).replace(\"#mm#\",mm).replace(\"#m#\",m).replace(\"#ss#\",ss).replace(\"#s#\",s).replace(\"#ampm#\",ampm);","};","  String.prototype.endsWith = (typeof (_a = String.prototype.endsWith) !== \"undefined\" &amp;&amp; _a !== null) ? String.prototype.endsWith : function(suffix) {","    var startPos;","    startPos = this.length - suffix.length;","    if (startPos &gt;= 0) {","      return this.lastIndexOf(suffix, startPos) === startPos;","    } else {","      return false;","    }","  };","  Array.remove = (typeof (_b = Array.remove) !== \"undefined\" &amp;&amp; _b !== null) ? Array.remove : function(array, from, to) {","    var rest;","    rest = array.slice((to || from) + 1 || array.length);","    array.length = from &lt; 0 ? array.length + from : from;","    return array.push.apply(array, rest);","  };","})();"];
